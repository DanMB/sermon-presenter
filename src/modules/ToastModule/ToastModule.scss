@import 'src/style/shared.scss';

.ToastViewport {
	position: fixed;
	bottom: 0;
	right: 0;
	display: flex;
	flex-direction: column;
	padding: $gap;
	gap: $gap;
	width: 20em;
	max-width: calc(100vw - #{$gap * 2});
	margin: 0;
	list-style: none;
	z-index: 20;
	outline: none;
}

.ToastRoot {
	--background: #{$offset};
	--foreground: #{$text};
	--border: #{$border};
	--highlight: #{$primary};

	&.negative {
		--background: #{$red};
		--foreground: #{darken($text, 10%)};
		--border: #{lighten($red, 10%)};
		--highlight: #{$text};
	}

	background-color: var(--background);
	color: var(--foreground);
	border: 1px solid var(--border);
	border-radius: $radius;
	padding: $padding;
	display: grid;
	grid-template-areas: 'title action' 'description action';
	grid-template-columns: auto max-content;
	column-gap: $gap;
	align-items: start;
}
.ToastRoot[data-state='open'] {
	animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1);
}
.ToastRoot[data-state='closed'] {
	animation: hide 100ms ease-in;
}
.ToastRoot[data-swipe='move'] {
	transform: translateX(#{$gap});
}
.ToastRoot[data-swipe='cancel'] {
	transform: translateX(0);
	transition: transform 200ms ease-out;
}
.ToastRoot[data-swipe='end'] {
	animation: swipeOut 100ms ease-out;
}

@keyframes hide {
	from {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}

@keyframes slideIn {
	from {
		transform: translateX(calc(100% + #{$gap}));
	}
	to {
		transform: translateX(0);
	}
}

@keyframes swipeOut {
	from {
		transform: translateX(var(--radix-toast-swipe-end-y));
	}
	to {
		transform: translateX(calc(100% + #{$gap}));
	}
}

.ToastTitle {
	grid-area: title;
	margin-bottom: 0.5em;
	font-weight: weight(bold);
	font-size: 1em;
	color: var(--highlight);
}

.ToastDescription {
	grid-area: description;
	margin: 0;
	font-size: 0.9em;
	line-height: 1.3em;
}

.ToastAction {
	grid-area: action;
	background: none;
	border: none;
	font: inherit;
	font-family: $mono-stack;
	color: var(--text);
	cursor: pointer;
	padding: $padding;
	margin: -$padding;
	padding-left: $gap;
	margin-left: -$gap;

	&:hover {
		color: var(--highlight);
	}
}
